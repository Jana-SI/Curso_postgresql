drop table produto, ItensVenda;

CREATE TABLE Produto(
    cod_prod INT PRIMARY KEY,
    descricao VARCHAR(50) UNIQUE,
    qtde_disponivel INT NOT NULL DEFAULT 0
);

INSERT INTO Produto VALUES (1, 'Feij√£o', 10);
INSERT INTO Produto VALUES (2, 'Arroz', 5);
INSERT INTO Produto VALUES (3, 'Farinha', 15);

CREATE TABLE ItensVenda(
    cod_venda  INT,
    id_produto INT,
    qtde_vendida INT,
    FOREIGN KEY (cod_venda) REFERENCES Produto(cod_prod) ON DELETE CASCADE
);

-- Triggers (Gatilhos) 

/* consideremos as tabelas produto e itensvenda. ao registrar uma nova venda, queremos atualizar a quantidade do produto no estoque */

CREATE TRIGGER t_atualiza_estoque
BEFORE INSERT ON itensvenda
FOR EACH ROW
EXECUTE PROCEDURE atualiza_estoque();

CREATE OR REPLACE FUNCTION atualiza_estoque() RETURNS TRIGGER
AS
$$
DECLARE

    qtde integer; -- quantidade disponivel do produto em estoque 

BEGIN

    select qtde_disponivel from produto where cod_prod = NEW.id_produto into qtde;

    if qtde < NEW.qtde_vendida THEN
        raise exception 'Quantidade indisponivel em estoque.';
   
    else 
        update produto set qtde_disponivel = qtde_disponivel - new.qtde_vendida
            where cod_prod = NEW.id_produto;

    end if;

    return NEW;
END;
$$ LANGUAGE plpgsql;

insert into itensvenda values(1, 1, 3);
insert into itensvenda values(2, 2, 5);

insert into itensvenda values(3, 1, 3);
insert into itensvenda values(4, 2, 6);

SELECT * FROM produto;